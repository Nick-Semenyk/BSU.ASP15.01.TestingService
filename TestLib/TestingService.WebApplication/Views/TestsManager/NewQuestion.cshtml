@using TestingService.WebApplication.Models
@model TestingService.WebApplication.Models.Question.QuestionViewModel
@{
    ViewBag.Title = "New question";
}
<h2>New question</h2>
@Html.ActionLink("Add text", "AddToQuestion", "TestsManager", new { @class = "question-button", type = 0, testId = Model.TestId, questionId = Model.Id }, null)
@Html.ActionLink("Add checkbox", "AddToQuestion", "TestsManager", new { @class = "question-button", type = 1, testId = Model.TestId, questionId = Model.Id }, null)
@Html.ActionLink("Add radiobutton", "AddToQuestion", "TestsManager", new { @class = "question-button", type = 2, testId = Model.TestId, questionId = Model.Id }, null)
@Html.ActionLink("Add textbox", "AddToQuestion", "TestsManager", new { @class = "question-button", type = 3, testId = Model.TestId, questionId = Model.Id }, null)
<div>
@using (Html.BeginForm("NewQuestion", "TestsManager", FormMethod.Post))
{
    @Html.HiddenFor(model => model.Id)
    ;
    @Html.HiddenFor(model => model.QuestionNumber)
    ;
    @Html.HiddenFor(model => model.TestId)
    ;
    <div class="horizontal-display width-percent50">
        @for (int i = 0; i < Model.Items.Count; i++)
        {
            switch (Model.Items[i].ItemType)
            {
                case DisplayType.Text:
                    <textarea class="form-control" cols="20" data-val="true" id="@i" name="@i" rows="2">@Model.Items[i].Value</textarea>
                    break;
                case DisplayType.CheckBox:
                    <textarea class="form-control" cols="20" data-val="true" id="@i" name="@i" rows="2">@Model.Items[i].Value</textarea>
                    break;
                case DisplayType.RadioButton:
                    <textarea class="form-control" cols="20" data-val="true" id="@i" name="@i" rows="2">@Model.Items[i].Value</textarea>
                    break;
                case DisplayType.TextBox:
                    <textarea class="form-control" cols="20" data-val="true" id="@i" name="@i" rows="2">@Model.Items[i].Value</textarea>
                    break;
            }
        }
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Update"/>
        </div>
    </div>
}
        <div class="horizontal-display width-percent50">
            <p>Preview:</p>
            @for (int i = 0; i < Model.Items.Count; i++)
            {
                switch (Model.Items[i].ItemType)
                {
                    case DisplayType.Text:
                        <p>@Model.Items[i].Value</p>
                        break;
                    case DisplayType.CheckBox:
                        <p>
                            @Model.Items[i].Value <input type="checkbox"/>
                        </p>
                        break;
                    case DisplayType.RadioButton:
                        <p>
                            @Model.Items[i].Value <input type="radio" name="rb" value="@i"/>
                        </p>
                        break;
                    case DisplayType.TextBox:
                        <p>
                            @Model.Items[i].Value <input type="text"/>
                        </p>
                        break;
                }
            }
        </div>
    </div>